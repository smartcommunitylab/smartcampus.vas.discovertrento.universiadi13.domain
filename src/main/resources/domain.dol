/*******************************************************************************
 * Copyright 2012-2013 Trento RISE
 * 
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 * 
 *        http://www.apache.org/licenses/LICENSE-2.0
 * 
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 ******************************************************************************/
package eu.trentorise.smartcampus.domain.universiadi13;

import it.sayservice.platform.compiler.domain.model.annotations.ServiceNotification;
import it.sayservice.platform.compiler.domain.model.annotations.Subscription;

import eu.trentorise.smartcampus.domain.discovertrento.EventService;
import eu.trentorise.smartcampus.domain.discovertrento.POIService;
import eu.trentorise.smartcampus.domain.discovertrento.GenericEvent;
import eu.trentorise.smartcampus.domain.discovertrento.GenericPOI;

DomainObject UniversiadiEventsService implements EventService {
    
    @ServiceNotification(serviceId="it.sayservice.ext.universiadi2013", methodName="GetEvents", converter="eu.trentorise.smartcampus.domain.universiadi13.converter.EventsDataConverter")
    port update(data : GenericEvent[]);

    @Subscription(serviceId="it.sayservice.ext.universiadi2013", methodName="GetEvents")
    operation subscribeEvents();       
    
    action initialize() {
        invoke subscribeEvents();
    }
}
DomainObject UniversiadiScheduleService implements EventService {
    
    @ServiceNotification(serviceId="it.sayservice.ext.universiadi2013", methodName="GetCompetitionSchedule", converter="eu.trentorise.smartcampus.domain.universiadi13.converter.EventsDataConverter")
    port update(data : GenericEvent[]);

    @Subscription(serviceId="it.sayservice.ext.universiadi2013", methodName="GetCompetitionSchedule")
    operation subscribeSchedule();       
    
    action initialize() {
        invoke subscribeSchedule();
    }
}

DomainObject UniversiadiVenuesService implements POIService {

    @ServiceNotification(serviceId="it.sayservice.ext.universiadi2013", methodName="GetVenues", converter="eu.trentorise.smartcampus.domain.universiadi13.converter.VenuesDataConverter")
    port update(data : GenericPOI[]);

    @Subscription(serviceId="it.sayservice.ext.universiadi2013", methodName="GetVenues")
    operation subscribeVenues();       
    
    action initialize() {
        invoke subscribeVenues();
    }

}

DomainObject UniversiadiPOIService implements POIService {

    @ServiceNotification(serviceId="it.sayservice.ext.universiadi2013", methodName="GetPoiFromCsv", converter="eu.trentorise.smartcampus.domain.universiadi13.converter.POIDataConverter")
    port update(data : GenericPOI[]);

    @Subscription(serviceId="it.sayservice.ext.universiadi2013", methodName="GetPoiFromCsv")
    operation subscribePOIs(csv:String);       
    
    action initialize() {
        invoke subscribePOIs("APT_Trento_Censimento_POI.csv");
        invoke subscribePOIs("APT_Valsugana_Censimento_POI.csv");
        invoke subscribePOIs("APT_Pine_Cembra_Censimento_POI.csv");
    }
}

DomainObject FeratelCommPOIService implements POIService {

    @ServiceNotification(serviceId="it.sayservice.ext.feratel", methodName="GetFeratelCommerciale", converter="eu.trentorise.smartcampus.domain.universiadi13.converter.FeratelCommConverter")
    port update(data : GenericPOI[]);

    @Subscription(serviceId="it.sayservice.ext.feratel", methodName="GetFeratelCommerciale")
    operation subscribePOIs(file:String);       
    
    action initialize() {
        invoke subscribePOIs("fiemme");
        invoke subscribePOIs("trento");
    }
}

DomainObject FeratelPubPOIService implements POIService {

    @ServiceNotification(serviceId="it.sayservice.ext.feratel", methodName="GetFeratelPubbliche", converter="eu.trentorise.smartcampus.domain.universiadi13.converter.FeratelPubConverter")
    port update(data : GenericPOI[]);

    @Subscription(serviceId="it.sayservice.ext.feratel", methodName="GetFeratelPubbliche")
    operation subscribePOIs(file:String);       
    
    action initialize() {
        invoke subscribePOIs("fiemme");
        invoke subscribePOIs("trento");
    }
}

DomainObject FeratelRistService implements POIService {

    @ServiceNotification(serviceId="it.sayservice.ext.feratel", methodName="GetFeratelRistoro", converter="eu.trentorise.smartcampus.domain.universiadi13.converter.FeratelRistConverter")
    port update(data : GenericPOI[]);

    @Subscription(serviceId="it.sayservice.ext.feratel", methodName="GetFeratelRistoro")
    operation subscribePOIs(file:String);       
    
    action initialize() {
        invoke subscribePOIs("fiemme");
        invoke subscribePOIs("trento");
    }
}

DomainObject FeratelRicService implements POIService {

    @ServiceNotification(serviceId="it.sayservice.ext.feratel", methodName="GetFeratelRicettive", converter="eu.trentorise.smartcampus.domain.universiadi13.converter.FeratelRicConverter")
    port update(data : GenericPOI[]);

    @Subscription(serviceId="it.sayservice.ext.feratel", methodName="GetFeratelRicettive")
    operation subscribePOIs(file:String);       
    
    action initialize() {
        invoke subscribePOIs("fiemme");
        invoke subscribePOIs("trento");
    }
}

DomainObject FeratelSportService implements POIService {

    @ServiceNotification(serviceId="it.sayservice.ext.feratel", methodName="GetFeratelSportive", converter="eu.trentorise.smartcampus.domain.universiadi13.converter.FeratelSportConverter")
    port update(data : GenericPOI[]);

    @Subscription(serviceId="it.sayservice.ext.feratel", methodName="GetFeratelSportive")
    operation subscribePOIs(file:String);       
    
    action initialize() {
        invoke subscribePOIs("fiemme");
        invoke subscribePOIs("trento");
    }
}